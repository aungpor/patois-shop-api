"use strict";
const dotenv = require("dotenv");
const assert = require("assert");

dotenv.config();

const {
  PORT,
  HOST,
  HOST_URL,
  HOST_PATH_ENV,
  SQL_USER,
  SQL_PASSWORD,
  SQL_DATABASE,
  SQL_SERVER,
  SQL_PORT,
  TOKEN_KEY,
  REFRESH_TOKEN_KEY,
  SECRET_KEY,
  REACT_APP_SECRET_KEY,
  AZURE_STORAGE_CONNECTION_STRING,
  AZURE_STORAGE_CONNECTION_STRING_NEW_STORAGE1,
  AZURE_STORAGE_CONNECTION_STRING_NEW_STORAGE2,
  AZURE_STORAGE_CONNECTION_STRING_NEW_STORAGE3,
  AZURE_STORAGE_CONNECTION_STRING_NEW_STORAGE4,
  AZURE_STORAGE_CONNECTION_STRING_NEW_STORAGE5,
  AZURE_STORAGE_KEY,
  AZURE_STORAGE_NAME,
  AZURE_STORAGE_CONTAINER,
  AZURE_STORAGE_CONTAINER_NEW,
  AZURE_STORAGE_CONTAINER_TEMP,
  AZURE_STORAGE_CONTAINER_USER_PROFILE_NEW,
  AZURE_STORAGE_ENDPOINT,
  AZURE_STORAGE_ENDPOINT_NEW_STORAGE1,
  AZURE_STORAGE_ENDPOINT_NEW_STORAGE2,
  AZURE_STORAGE_ENDPOINT_NEW_STORAGE3,
  AZURE_STORAGE_ENDPOINT_NEW_STORAGE4,
  AZURE_STORAGE_ENDPOINT_NEW_STORAGE5,
  AZURE_STORAGE_PATH,
  AZURE_STORAGE_PATH_NEW_STORAGE,
  MaxCard_Url,
  MaxCard_ClientID,
  MaxCard_ClientSecret,
  MaxCard_Url_Crypt,
  SMS_Url,
  SMS_Username,
  SMS_Password,
  SMS_UserPass_Base64,
  LINE_MERCHANT_ACCESS_TOKEN,
  LINE_MERCHANT_CHANNEL_SECRET,
  LINE_CUSTOMER_ACCESS_TOKEN,
  LINE_CUSTOMER_CHANNEL_SECRET,
  MAIL_MAILER,
  MAIL_HOST,
  MAIL_PORT,
  MAIL_USERNAME,
  MAIL_PASSWORD,
  MAIL_SENDGRID_API_KEY,
  MAIL_ENCRYPTION,
  MAIL_FROM_ADDRESS,
  LOG_CONTAINER_NAME,
  REDIS_HOST,
  REDIS_PASSWORD,
  REDIS_PORT,
  SEARCH_DATA_API,
  MAXCARD_REWARD_POINT_API,
  BOT_WEB_HOOK_API,
  ADMIN_API,
  EVENT_API,
  MISSION_API,
  LOCATION_API,
  SMS_API,
  MaxMart_scan_use_ecode_Url,
  MaxMart_scan_use_ecode_req_key

} = process.env;

const sqlEncrypt = process.env.SQL_ENCRYPT === "true";
assert(PORT, "PORT is required");
assert(HOST, "HOST is required");

module.exports = {
  port: PORT,
  host: HOST,
  url: HOST_URL,
  HOST_PATH_ENV: HOST_PATH_ENV,
  token: TOKEN_KEY,
  rtoken: REFRESH_TOKEN_KEY,
  SECRET_KEY: SECRET_KEY,
  REACT_APP_SECRET_KEY: REACT_APP_SECRET_KEY,
  AZURE_STORAGE_CONNECTION_STRING: AZURE_STORAGE_CONNECTION_STRING,
  AZURE_STORAGE_CONNECTION_STRING_NEW_STORAGE1: AZURE_STORAGE_CONNECTION_STRING_NEW_STORAGE1,
  AZURE_STORAGE_CONNECTION_STRING_NEW_STORAGE2: AZURE_STORAGE_CONNECTION_STRING_NEW_STORAGE2,
  AZURE_STORAGE_CONNECTION_STRING_NEW_STORAGE3: AZURE_STORAGE_CONNECTION_STRING_NEW_STORAGE3,
  AZURE_STORAGE_CONNECTION_STRING_NEW_STORAGE4: AZURE_STORAGE_CONNECTION_STRING_NEW_STORAGE4,
  AZURE_STORAGE_CONNECTION_STRING_NEW_STORAGE5: AZURE_STORAGE_CONNECTION_STRING_NEW_STORAGE5,
  AZURE_STORAGE_KEY: AZURE_STORAGE_KEY,
  AZURE_STORAGE_NAME: AZURE_STORAGE_NAME,
  AZURE_STORAGE_CONTAINER: AZURE_STORAGE_CONTAINER,
  AZURE_STORAGE_CONTAINER_NEW: AZURE_STORAGE_CONTAINER_NEW,
  AZURE_STORAGE_CONTAINER_TEMP: AZURE_STORAGE_CONTAINER_TEMP,
  AZURE_STORAGE_CONTAINER_USER_PROFILE_NEW: AZURE_STORAGE_CONTAINER_USER_PROFILE_NEW,
  AZURE_STORAGE_ENDPOINT: AZURE_STORAGE_ENDPOINT,
  AZURE_STORAGE_ENDPOINT_NEW_STORAGE1: AZURE_STORAGE_ENDPOINT_NEW_STORAGE1,
  AZURE_STORAGE_ENDPOINT_NEW_STORAGE2: AZURE_STORAGE_ENDPOINT_NEW_STORAGE2,
  AZURE_STORAGE_ENDPOINT_NEW_STORAGE3: AZURE_STORAGE_ENDPOINT_NEW_STORAGE3,
  AZURE_STORAGE_ENDPOINT_NEW_STORAGE4: AZURE_STORAGE_ENDPOINT_NEW_STORAGE4,
  AZURE_STORAGE_ENDPOINT_NEW_STORAGE5: AZURE_STORAGE_ENDPOINT_NEW_STORAGE5,
  AZURE_STORAGE_PATH: AZURE_STORAGE_PATH,
  AZURE_STORAGE_PATH_NEW_STORAGE: AZURE_STORAGE_PATH_NEW_STORAGE,
  MaxCard_Url: MaxCard_Url,
  MaxCard_ClientID: MaxCard_ClientID,
  MaxCard_ClientSecret: MaxCard_ClientSecret,
  MaxCard_Url_Crypt: MaxCard_Url_Crypt,
  SMS_Url: SMS_Url,
  SMS_Username: SMS_Username,
  SMS_Password: SMS_Password,
  SMS_UserPass_Base64: SMS_UserPass_Base64,
  sql: {
    server: SQL_SERVER,
    database: SQL_DATABASE,
    user: SQL_USER,
    password: SQL_PASSWORD,
    pool: {
      max: 50,
      min: 0,
      idleTimeoutMillis: 30000
    },
    options: {
      encrypt: sqlEncrypt,
      enableArithAbort: true,
    },
  },
  LINE: {
    LINE_MERCHANT_ACCESS_TOKEN,
    LINE_MERCHANT_CHANNEL_SECRET,
    LINE_CUSTOMER_ACCESS_TOKEN,
    LINE_CUSTOMER_CHANNEL_SECRET,
  },
  MAIL_MAILER: MAIL_MAILER,
  MAIL_HOST: MAIL_HOST,
  MAIL_PORT: MAIL_PORT,
  MAIL_USERNAME: MAIL_USERNAME,
  MAIL_PASSWORD: MAIL_PASSWORD,
  MAIL_SENDGRID_API_KEY: MAIL_SENDGRID_API_KEY,
  MAIL_ENCRYPTION: MAIL_ENCRYPTION,
  MAIL_FROM_ADDRESS: MAIL_FROM_ADDRESS,
  LOG_CONTAINER_NAME: LOG_CONTAINER_NAME,
  SEARCH_DATA_API: SEARCH_DATA_API,
  REDIS: {
    REDIS_HOST: REDIS_HOST,
    REDIS_PASSWORD: REDIS_PASSWORD,
    REDIS_PORT: REDIS_PORT
  },
  MAXCARD_REWARD_POINT_API: MAXCARD_REWARD_POINT_API,
  BOT_WEB_HOOK_API: BOT_WEB_HOOK_API,
  ADMIN_API: ADMIN_API,
  EVENT_API: EVENT_API,
  MISSION_API: MISSION_API,
  LOCATION_API: LOCATION_API,
  SMS_API: SMS_API,
  MaxMart_scan_use_ecode_Url: MaxMart_scan_use_ecode_Url,
  MaxMart_scan_use_ecode_req_key: MaxMart_scan_use_ecode_req_key
};